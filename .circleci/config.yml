version: 2.1

orbs:
  aws-s3: circleci/aws-s3@1.0.16
  aws-ecr: circleci/aws-ecr@6.12.2

executors:
  node:
    docker:
      - image: cimg/node:12.18.3
  terraform:
    docker:
      - image: hashicorp/terraform:light
  aws:
    docker:
      - image: circleci/python:3.7.1

commands:
  javascript-setup:
    steps:
      - checkout:
          path: ~/repo
      - restore_cache:
          keys:
            - npm-deps-{{ checksum "package-lock.json" }}
      - run: npm ci
      - save_cache:
          key: npm-deps-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
  terraform-setup:
    steps:
      - checkout:
          path: ~/repo
      - run: terraform init

jobs:
  lint-javascript:
    executor: node
    parameters:
      directory:
        default: ""
        type: string
    working_directory: ~/repo/<<parameters.directory>>
    steps:
      - javascript-setup
      - run: npm run lint
  test-javascript:
    executor: node
    parameters:
      directory:
        default: ""
        type: string
    working_directory: ~/repo/<<parameters.directory>>
    steps:
      - javascript-setup
      - run: npm run test
  build-javascript:
    executor: node
    working_directory: ~/repo/client
    steps:
      - javascript-setup
      - run: npm run build
      - persist_to_workspace:
          root: ./
          paths:
            - build
  lint-terraform:
    executor: terraform
    working_directory: ~/repo/infrastructure
    steps:
      - terraform-setup
      - run: terraform fmt
      - run: terraform validate
  plan-terraform:
    executor: terraform
    working_directory: ~/repo/infrastructure
    steps:
      - terraform-setup
      - run: terraform plan -out=./terraform.plan
      - persist_to_workspace:
          root: ./
          paths:
            - terraform.plan
      - store_artifacts:
          path: ./terraform.plan
  apply-terraform:
    executor: terraform
    working_directory: ~/repo/infrastructure
    steps:
      - terraform-setup
      - attach_workspace:
          at: .
      - run: terraform apply ./terraform.plan
  deploy-client:
    executor: aws
    working_directory: ~/repo/client
    steps:
      - checkout
      - attach_workspace:
          at: .
      - aws-s3/sync:
          from: ./build
          to: s3://poker-frontend-app

workflows:
  commit:
    jobs:
      - lint-javascript:
          name: lint-client-js
          directory: client
          context: Poker build
      - test-javascript:
          name: test-client-js
          directory: client
          context: Poker build
      - build-javascript:
          name: build-client-js
          context: Poker build
      - lint-javascript:
          name: lint-server-js
          directory: server
          context: Poker build
      - test-javascript:
          name: test-server-js
          directory: server
          context: Poker build
      - lint-terraform:
          context: Poker build
      - plan-terraform:
          context: Poker build
      - apply-terraform:
          context: Poker deploy
          filters:
            branches:
              only: master
          requires:
            - lint-client-js
            - test-client-js
            - build-client-js
            - lint-server-js
            - test-server-js
            - lint-terraform
            - plan-terraform
      - aws-ecr/build-and-push-image:
          name: build-server-image
          context: Poker deploy
          path: ./server
          repo: poker-app
          tag: "{{ .Environment.CIRCLE_SHA1 }}"
          filters:
            branches:
              only: master
          requires:
            - apply-terraform
      - deploy-client:
          filters:
            branches:
              only: master
          requires:
            - apply-terraform
